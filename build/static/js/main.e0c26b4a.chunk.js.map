{"version":3,"sources":["components/Header/index.js","components/LoginScreen/index.js","components/ChatScreen/RoomHeader/index.js","components/ChatScreen/UserList/User.js","components/ChatScreen/UserList/index.js","components/ChatScreen/MessageList/Message.js","components/ChatScreen/MessageList/index.js","components/ChatScreen/Composer/index.js","components/ChatScreen/index.js","components/Container.js","App.js","index.js"],"names":["Header","props","className","href","LoginScreen","autoComplete","onSubmit","type","maxLength","pattern","title","required","value","usernameValue","onChange","onUsernameChange","RoomHeader","User","user","name","UserList","users","map","index","key","toString","Message","message","text","MessageList","messages","Composer","htmlFor","id","autoFocus","placeholder","onKeyUp","onClick","onSend","ChatScreen","handleCompose","event","setState","messageText","target","handleKeyUp","keyCode","handleSendMessage","preventDefault","newMessage","me","state","socket","emit","username","this","io","on","console","log","newUserList","newMessageList","close","style","height","Component","Container","handleUsernameChange","handleSubmit","showStart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0c26b4a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(props) {\r\n return (\r\n  <nav className=\"navbar navbar-dark bg-primary\">\r\n   <a className=\"navbar-brand\" href=\"/\">Chat App</a>\r\n  </nav>\r\n )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction LoginScreen(props) {\r\n  return (\r\n    <>\r\n      <h1>Welcome To Chat</h1>\r\n      <hr />\r\n      <p>\r\n        <strong>\r\n          Enter a username and start chatting!\r\n        </strong>\r\n      </p>\r\n      <form\r\n        autoComplete=\"off\"\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <p>\r\n          <label>\r\n            username\r\n          <br />\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"12\"\r\n              pattern=\"^[a-zA-Z][a-zA-Z0-9_]{1,12}$\"\r\n              title=\"2 to 12 characters long, letters, numbers and underscores allowed\"\r\n              required\r\n              value={props.usernameValue}\r\n              onChange={props.onUsernameChange}\r\n            />\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn-lg btn-primary\"\r\n            value=\"Start Chatting\"\r\n          />\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\n\r\nfunction RoomHeader(props) {\r\n return (\r\n  <div className=\"col text-light\">\r\n   <h1>Chat</h1>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default RoomHeader;\r\n","import React from \"react\";\r\n\r\nfunction User(props) {\r\n return (\r\n  <div>\r\n   {props.user.name}\r\n  </div>\r\n );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport User from \"./User\";\r\n\r\nfunction UserList(props) {\r\n return (\r\n  <div className=\"col-2 mr-2 bg-light text-dark\">\r\n   <h3>Users</h3>\r\n   {props.users.map((user, index) =>\r\n    <User\r\n     key={index.toString()}\r\n     user={user}\r\n    />\r\n   )}\r\n  </div>\r\n );\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\n\r\nfunction Message(props) {\r\n return (\r\n  <div>\r\n   <strong>{props.message.user.name}</strong>, &nbsp;\r\n   {props.message.text}\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nfunction MessageList(props) {\r\n  return (\r\n    <main className=\"col mx-2 text-muted bg-light\">\r\n      <h3>Messages</h3>\r\n      {props.messages.map((message, index) =>\r\n        <Message\r\n          key={index.toString()}\r\n          message={message}\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MessageList;\r\n","import React from \"react\";\r\n\r\nfunction Composer(props) {\r\n return (\r\n  <div className=\"col p-2\">\r\n   <div className=\"row\">\r\n    <div className=\"col-1\">\r\n     <label className=\"text-light\" htmlFor=\"messageText\">{props.user.name}</label>\r\n    </div>\r\n    <div className=\"col\">\r\n     <input\r\n      type=\"text\"\r\n      className=\"w-100\"\r\n      id=\"messageText\"\r\n      autoFocus\r\n      placeholder=\"Type your message...\"\r\n      value={props.text}\r\n      onChange={props.onChange}\r\n      onKeyUp={props.onKeyUp}\r\n     />\r\n    </div>\r\n    <div className=\"col-1\">\r\n     <button\r\n      onClick={props.onSend}\r\n     >\r\n      Send\r\n     </button>\r\n    </div>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Composer;\r\n","import React, { Component } from \"react\";\r\nimport RoomHeader from \"./RoomHeader\";\r\nimport UserList from \"./UserList\";\r\nimport MessageList from \"./MessageList\";\r\nimport Composer from \"./Composer\";\r\nimport io from \"socket.io-client\";\r\n\r\nclass ChatScreen extends Component {\r\n constructor(props) {\r\n  super(props);\r\n\r\n  this.socket = {};\r\n  this.me = {\r\n   id: \"\",\r\n   name: this.props.username\r\n  };\r\n\r\n  this.state = {\r\n   users: [],\r\n   messages: [],\r\n   messageText: \"\"\r\n  };\r\n }\r\n\r\n handleCompose = event => {\r\n  this.setState({ messageText: event.target.value });\r\n };\r\n\r\n handleKeyUp = event => {\r\n  if (event.keyCode === 13) {\r\n   this.handleSendMessage(event);\r\n  }\r\n };\r\n\r\n handleSendMessage = event => {\r\n  event.preventDefault();\r\n\r\n  const newMessage = {\r\n   user: this.me,\r\n   text: this.state.messageText\r\n  };\r\n\r\n  this.socket.emit(\"message\", newMessage);\r\n  this.setState({ messageText: \"\" });\r\n };\r\n\r\n componentDidMount() {\r\n  // Establish a socket connection\r\n  this.socket = io();\r\n\r\n  // Add socket ID to current user's info\r\n  this.socket.on(\"connect\", () => this.me.id = this.socket.id);\r\n\r\n  console.log(this.me);\r\n\r\n  // socket.io event handlers\r\n  this.socket.on(\"message\", message => {\r\n   this.setState({ messages: [...this.state.messages, message] });\r\n  });\r\n\r\n  this.socket.on(\"users\", newUserList => {\r\n   this.setState({ users: newUserList });\r\n  });\r\n\r\n  this.socket.on(\"history\", newMessageList => {\r\n   this.setState({ messages: newMessageList });\r\n  });\r\n\r\n  // Tell the server we've joined the chat\r\n  this.socket.emit(\"join\", this.me);\r\n }\r\n\r\n componentWillUnmount() {\r\n  // Tell the server we're heading out\r\n  this.socket.close();\r\n }\r\n\r\n render() {\r\n  return (\r\n   <div className=\"bg-secondary\">\r\n    <div className=\"row\">\r\n     <RoomHeader />\r\n    </div>\r\n    <div className=\"row\" style={{ height: \"40em\" }}>\r\n     <MessageList\r\n      messages={this.state.messages}\r\n     />\r\n     <UserList\r\n      users={this.state.users}\r\n     />\r\n    </div>\r\n    <div className=\"row\">\r\n     <Composer\r\n      onChange={this.handleCompose}\r\n      onSend={this.handleSendMessage}\r\n      onKeyUp={this.handleKeyUp}\r\n      user={this.me}\r\n      text={this.state.messageText}\r\n     />\r\n    </div>\r\n   </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport ChatScreen from \"./ChatScreen\";\r\n\r\nclass Container extends Component {\r\n constructor(props) {\r\n  super(props);\r\n\r\n  this.state = {\r\n   usernameValue: \"\",\r\n   showStart: true\r\n  };\r\n }\r\n\r\n handleUsernameChange = event => {\r\n  this.setState({ usernameValue: event.target.value });\r\n }\r\n\r\n handleSubmit = event => {\r\n  event.preventDefault();\r\n  this.setState({ showStart: false });\r\n }\r\n\r\n render() {\r\n  return (\r\n   <div className=\"container\">\r\n    <Header />\r\n    {this.state.showStart\r\n     ? <LoginScreen\r\n      usernameValue={this.state.usernameValue}\r\n      onUsernameChange={this.handleUsernameChange}\r\n      onSubmit={this.handleSubmit}\r\n     />\r\n     : <ChatScreen\r\n      username={this.state.usernameValue}\r\n     />\r\n    }\r\n   </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return (\n    <Container />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}